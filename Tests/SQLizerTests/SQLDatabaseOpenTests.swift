import XCTest
@testable import SQLizer

final class SQLDatabaseOpenTests: XCTestCase {
    
    let databasePath = "/tmp/sqlizer.sqlite3"
    
    override func setUp() {
        super.setUp()
        try? FileManager.default.removeItem(atPath: databasePath)
    }
    
    func testCreateDatabase() async throws {
        
        let db = try await SQLDatabase.open(at: databasePath, schemaVersion: 1, migration: { db, type in
            switch type {
            case .create(let version):
                // There is no version yet, create tables here.
                _ = version
                return
            case .upgrade(let fromVersion, let toVersion):
                // This is where we do migration
                _ = fromVersion
                _ = toVersion
                return
            }
        })
        
        try await db.run { db in
            XCTAssertEqual(try db.fetchSchemaVersion(), 1)
        }
    }
    
    func testCreateDatabaseInMemory() async throws {
        
        let db = try await SQLDatabase.openInMemory { db in
            // Create tables here.
        }
        
        try await db.run { db in
            XCTAssertEqual(try db.fetchSchemaVersion(), 1)
        }
    }

    func testCreateTemporaryDatabase() async throws {
        
        let db = try await SQLDatabase.openTemporary { db in
            // Create tables here.
        }
        
        try await db.run { db in
            XCTAssertEqual(try db.fetchSchemaVersion(), 1)
        }
    }
}
